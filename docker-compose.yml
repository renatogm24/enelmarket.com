version: "3.3"

services:
  frontend: #it is just a name, which will be used only in this file.
    image: frontend-img #name of the image after dockerfile executes
    container_name: frontend-service-app #name of the container created from docker image
    build:
      context: ./frontend #docker file path (. means root directory)
      dockerfile: Dockerfile #docker file name
    ports:
      - "3000:3000" #docker containter port with your os port
    restart: always
    environment:
      ROOT_URL: localhost:3000

  #service 1: definition of mysql database
  db:
    image: mysql:latest
    container_name: mysql-db
    environment:
      - MYSQL_ROOT_PASSWORD=spring
    volumes:
      - my-datavolume:/var/lib/mysql
    ports:
      - "3306:3306"
    restart: always

  #service 2: definition of phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: my-php-myadmin
    ports:
      - "8082:80"
    restart: always

    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: spring

  #service 3: definition of your spring-boot app
  customerservice: #it is just a name, which will be used only in this file.
    image: book-service #name of the image after dockerfile executes
    container_name: book-service-app #name of the container created from docker image
    build:
      context: ./backend/BookClub #docker file path (. means root directory)
      dockerfile: Dockerfile #docker file name
    ports:
      - "8084:8084" #docker containter port with your os port
    restart: always

    depends_on: #define dependencies of this app
      - db #dependency name (which is defined with this name 'db' in this file earlier)
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/bookclub?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: spring

  nginx-ssl-proxy:
    image: danieldent/nginx-ssl-proxy
    restart: always
    environment:
      UPSTREAM: 127.0.0.1:3000
      SERVERNAME: enelmarket.com
      EXTRANAMES: www.enelmarket.com, *.enelmarket.com
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/etc/letsencrypt"
volumes:
  my-datavolume:
